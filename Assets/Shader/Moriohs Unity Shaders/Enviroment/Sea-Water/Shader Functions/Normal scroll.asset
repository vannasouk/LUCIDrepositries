%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 78b2425a2284af743826c689403a4924, type: 3}
  m_Name: Normal scroll
  m_EditorClassIdentifier: 
  m_functionInfo: "// Made with Amplify Shader Editor\n// Available at the Unity
    Asset Store - http://u3d.as/y3X \n/*ASEBEGIN\nVersion=18935\n41;30;2180;958;2655.94;474.0598;1.3;True;False\nNode;AmplifyShaderEditor.CommentaryNode;1;-1470.171,-352;Inherit;False;2124.031;980.7038;Emission
    Scroll V1;35;0;67;76;66;79;65;64;82;51;61;52;12;11;7;48;20;9;54;18;47;19;17;16;3;4;50;21;68;96;107;108;109;104;103;102;;1,1,1,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;72;688,240;Inherit;False;458.6365;147.8446;Stochastic
    Hash, source: https://redd.it/dhr5g2;2;74;73;;1,1,1,1;0;0\nNode;AmplifyShaderEditor.CustomExpressionNode;79;-416,-16;Float;False;   
    //triangle vertices and blend weights$    //BW_vx[0...2].xyz = triangle verts$   
    //BW_vx[3].xy = blend weights (z is unused)$    float4x3 BW_vx@$$    //uv transformed
    into triangular grid space with UV scaled by approximation of 2*sqrt(3)$    float2
    skewUV = mul(float2x2 (1.0 , 0.0 , -0.57735027 , 1.15470054), UV * 3.464)@$$   
    //vertex IDs and barycentric coords$    float2 vxID = float2 (floor(skewUV))@$   
    float3 barry = float3 (frac(skewUV), 0)@$    barry.z = 1.0-barry.x-barry.y@$$   
    BW_vx = ((barry.z>0) ? $        float4x3(float3(vxID, 0), float3(vxID + float2(0,
    1), 0), float3(vxID + float2(1, 0), 0), barry.zyx) :$        float4x3(float3(vxID
    + float2 (1, 1), 0), float3(vxID + float2 (1, 0), 0), float3(vxID + float2 (0,
    1), 0), float3(-barry.z, 1.0-barry.y, 1.0-barry.x)))@$$    //calculate derivatives
    to avoid triangular grid artifacts$    float2 dx = ddx(UV)@$    float2 dy = ddy(UV)@$$   
    //blend samples with calculated weights$    return mul (UnpackScaleNormal(tex2D(tex,
    UV + hash2D2D(BW_vx[0].xy), dx, dy), _NormalScale), BW_vx[3].x) + $           
    mul (UnpackScaleNormal(tex2D(tex, UV + hash2D2D(BW_vx[1].xy), dx, dy), _NormalScale),
    BW_vx[3].y) + $            mul (UnpackScaleNormal(tex2D(tex, UV + hash2D2D(BW_vx[2].xy),
    dx, dy), _NormalScale), BW_vx[3].z)@;3;Create;3;True;tex;SAMPLER2D;0,0;In;;Float;False;True;UV;FLOAT2;0,0;In;;Float;False;True;_NormalScale;FLOAT;0;In;;Inherit;False;tex2DStochasticNormals;False;False;1;7;;False;3;0;SAMPLER2D;0,0;False;1;FLOAT2;0,0;False;2;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.Vector2Node;50;-1152,-144;Inherit;False;Property;_VectorXY;Vector
    X,Y;4;0;Create;True;0;0;0;False;0;False;0,-1;0,1;0;3;FLOAT2;0;FLOAT;1;FLOAT;2\nNode;AmplifyShaderEditor.TexturePropertyNode;48;-1424,-288;Inherit;True;Property;_Normal;Normal;1;0;Create;True;1;NORMAL
    MAPS;0;0;False;2;Space(25);Header(NORMAL MAPS);False;db59049c91e6b124d9b2e551cf157e89;b986b9abecbd629439c6bcdbce3e374e;True;bump;Auto;Texture2D;-1;0;2;SAMPLER2D;0;SAMPLERSTATE;1\nNode;AmplifyShaderEditor.RangedFloatNode;3;-1072,192;Inherit;False;Constant;_Float0;Float
    0;9;0;Create;True;0;0;0;False;0;False;2.179;0;0;0;0;1;FLOAT;0\nNode;AmplifyShaderEditor.TexturePropertyNode;47;-1424,240;Inherit;True;Property;_SecondaryNormal;Secondary
    Normal;5;0;Create;True;0;0;0;False;0;False;b986b9abecbd629439c6bcdbce3e374e;b986b9abecbd629439c6bcdbce3e374e;True;bump;Auto;Texture2D;-1;0;2;SAMPLER2D;0;SAMPLERSTATE;1\nNode;AmplifyShaderEditor.PannerNode;21;-624,304;Inherit;False;3;0;FLOAT2;0,0;False;2;FLOAT2;1,1;False;1;FLOAT;1;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.SimpleAddOpNode;19;-576,-224;Inherit;False;2;2;0;FLOAT2;0,0;False;1;FLOAT;0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.DynamicAppendNode;105;-1760,64;Inherit;False;FLOAT2;4;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;3;FLOAT;0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.WorldPosInputsNode;106;-1936,32;Inherit;False;0;4;FLOAT3;0;FLOAT;1;FLOAT;2;FLOAT;3\nNode;AmplifyShaderEditor.TextureTransformNode;107;-1104,304;Inherit;False;-1;False;1;0;SAMPLER2D;;False;2;FLOAT2;0;FLOAT2;1\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode;108;-880,304;Inherit;False;3;3;0;FLOAT2;0,0;False;1;FLOAT;0;False;2;FLOAT2;0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.SimpleAddOpNode;109;-752,304;Inherit;False;2;2;0;FLOAT2;0,0;False;1;FLOAT2;0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.TextureTransformNode;102;-1392,16;Inherit;False;-1;False;1;0;SAMPLER2D;;False;2;FLOAT2;0;FLOAT2;1\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode;103;-1200,16;Inherit;False;3;3;0;FLOAT2;0,0;False;1;FLOAT;0;False;2;FLOAT2;0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.SimpleAddOpNode;104;-1072,16;Inherit;False;2;2;0;FLOAT2;0,0;False;1;FLOAT2;0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.Vector2Node;54;-1104,400;Inherit;False;Property;_SecondaryVectorXY;Secondary
    Vector X,Y;8;0;Create;True;0;0;0;False;0;False;0,-1;0,1;0;3;FLOAT2;0;FLOAT;1;FLOAT;2\nNode;AmplifyShaderEditor.SimpleTimeNode;16;-864,528;Inherit;False;1;0;FLOAT;1;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RangedFloatNode;52;-1136,528;Inherit;False;Property;_SecondaryScrollSpeed;Secondary
    Scroll Speed;6;0;Create;True;0;0;0;False;0;False;0.17;0;-2;2;0;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleTimeNode;7;-912,-224;Inherit;False;1;0;FLOAT;1;False;1;FLOAT;0\nNode;AmplifyShaderEditor.PannerNode;17;-752,-224;Inherit;False;3;0;FLOAT2;1,1;False;2;FLOAT2;0,1;False;1;FLOAT;0.1;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.PannerNode;12;-752,16;Inherit;False;3;0;FLOAT2;1,1;False;2;FLOAT2;0,1;False;1;FLOAT;0.1;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.IntNode;70;688,128;Inherit;False;Property;_StochasticTiling;Stochastic
    Tiling;0;1;[Enum];Create;True;0;2;Off;0;Method by Rotoscope;1;0;False;0;False;1;0;False;0;1;INT;0\nNode;AmplifyShaderEditor.RangedFloatNode;51;-1184,-224;Inherit;False;Property;_ScrollSpeed;Scroll
    Speed;2;0;Create;True;0;0;0;False;0;False;0.075;0.1;-2;2;0;1;FLOAT;0\nNode;AmplifyShaderEditor.RegisterLocalVarNode;71;896,128;Inherit;False;StochasticTiling;-1;True;1;0;INT;0;False;1;INT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;96;-416,-288;Float;False;   
    //triangle vertices and blend weights$    //BW_vx[0...2].xyz = triangle verts$   
    //BW_vx[3].xy = blend weights (z is unused)$    float4x3 BW_vx@$$    //uv transformed
    into triangular grid space with UV scaled by approximation of 2*sqrt(3)$    float2
    skewUV = mul(float2x2 (1.0 , 0.0 , -0.57735027 , 1.15470054), UV * 3.464)@$$   
    //vertex IDs and barycentric coords$    float2 vxID = float2 (floor(skewUV))@$   
    float3 barry = float3 (frac(skewUV), 0)@$    barry.z = 1.0-barry.x-barry.y@$$   
    BW_vx = ((barry.z>0) ? $        float4x3(float3(vxID, 0), float3(vxID + float2(0,
    1), 0), float3(vxID + float2(1, 0), 0), barry.zyx) :$        float4x3(float3(vxID
    + float2 (1, 1), 0), float3(vxID + float2 (1, 0), 0), float3(vxID + float2 (0,
    1), 0), float3(-barry.z, 1.0-barry.y, 1.0-barry.x)))@$$    //calculate derivatives
    to avoid triangular grid artifacts$    float2 dx = ddx(UV)@$    float2 dy = ddy(UV)@$$   
    //blend samples with calculated weights$    return mul (UnpackScaleNormal(tex2D(tex,
    UV + hash2D2D(BW_vx[0].xy), dx, dy), _NormalScale), BW_vx[3].x) + $           
    mul (UnpackScaleNormal(tex2D(tex, UV + hash2D2D(BW_vx[1].xy), dx, dy), _NormalScale),
    BW_vx[3].y) + $            mul (UnpackScaleNormal(tex2D(tex, UV + hash2D2D(BW_vx[2].xy),
    dx, dy), _NormalScale), BW_vx[3].z)@;3;Create;3;True;tex;SAMPLER2D;0,0;In;;Float;False;True;UV;FLOAT2;0,0;In;;Float;False;True;_NormalScale;FLOAT;0;In;;Inherit;False;tex2DStochasticNormals;False;False;1;7;;False;3;0;SAMPLER2D;0,0;False;1;FLOAT2;0,0;False;2;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.NormalizeNode;66;288,-64;Inherit;False;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.OneMinusNode;20;-592,16;Inherit;False;1;0;FLOAT2;0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.BlendNormalsNode;64;-144,-64;Inherit;False;0;3;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;2;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RangedFloatNode;82;-640,512;Inherit;False;Property;_NormalScaleSecondary;Normal
    Scale Secondary;7;0;Create;True;0;0;0;False;0;False;0.2;0.5;-2;2;0;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode;9;-896,112;Inherit;False;2;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;74;800,288;Float;False;return
    frac(sin(fmod(float2(dot(s, float2(127.1,311.7)), dot(s, float2(269.5,183.3))),
    3.14159))*43758.5453)@;2;Create;1;True;s;FLOAT2;0,0;In;;Float;False;hash2D2D;False;True;0;;False;1;0;FLOAT2;0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.CustomExpressionNode;76;-416,256;Float;False;   
    //triangle vertices and blend weights$    //BW_vx[0...2].xyz = triangle verts$   
    //BW_vx[3].xy = blend weights (z is unused)$    float4x3 BW_vx@$$    //uv transformed
    into triangular grid space with UV scaled by approximation of 2*sqrt(3)$    float2
    skewUV = mul(float2x2 (1.0 , 0.0 , -0.57735027 , 1.15470054), UV * 3.464)@$$   
    //vertex IDs and barycentric coords$    float2 vxID = float2 (floor(skewUV))@$   
    float3 barry = float3 (frac(skewUV), 0)@$    barry.z = 1.0-barry.x-barry.y@$$   
    BW_vx = ((barry.z>0) ? $        float4x3(float3(vxID, 0), float3(vxID + float2(0,
    1), 0), float3(vxID + float2(1, 0), 0), barry.zyx) :$        float4x3(float3(vxID
    + float2 (1, 1), 0), float3(vxID + float2 (1, 0), 0), float3(vxID + float2 (0,
    1), 0), float3(-barry.z, 1.0-barry.y, 1.0-barry.x)))@$$    //calculate derivatives
    to avoid triangular grid artifacts$    float2 dx = ddx(UV)@$    float2 dy = ddy(UV)@$$   
    //blend samples with calculated weights$    return mul (UnpackScaleNormal(tex2D(tex,
    UV + hash2D2D(BW_vx[0].xy), dx, dy), _NormalScale), BW_vx[3].x) + $           
    mul (UnpackScaleNormal(tex2D(tex, UV + hash2D2D(BW_vx[1].xy), dx, dy), _NormalScale),
    BW_vx[3].y) + $            mul (UnpackScaleNormal(tex2D(tex, UV + hash2D2D(BW_vx[2].xy),
    dx, dy), _NormalScale), BW_vx[3].z)@;3;Create;3;True;tex;SAMPLER2D;0,0;In;;Float;False;True;UV;FLOAT2;0,0;In;;Float;False;True;_NormalScale;FLOAT;0;In;;Inherit;False;tex2DStochasticNormals;False;False;1;7;;False;3;0;SAMPLER2D;0,0;False;1;FLOAT2;0,0;False;2;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.CustomExpressionNode;61;-1456,544;Inherit;False;//This
    Shader was made possible by Moriohs Toon Shader (https://gitlab.com/xMorioh/moriohs-toon-shader);7;Create;0;SourceDeclaration;False;True;0;;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleTimeNode;4;-1072,112;Inherit;False;1;0;FLOAT;1;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode;99;-736,-560;Inherit;False;2;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.BlendNormalsNode;65;80,-64;Inherit;False;0;3;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;2;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RangedFloatNode;67;-720,432;Inherit;False;Property;_NormalScale;Normal
    Scale;3;0;Create;True;0;0;0;False;0;False;0.2;0.5;-2;2;0;1;FLOAT;0\nNode;AmplifyShaderEditor.OneMinusNode;11;-912,16;Inherit;False;1;0;FLOAT2;0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.FunctionInput;68;-1392,128;Inherit;False;UVMul;1;0;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;73;960,288;Float;False;   
    //triangle vertices and blend weights$    //BW_vx[0...2].xyz = triangle verts$   
    //BW_vx[3].xy = blend weights (z is unused)$    float4x3 BW_vx@$$    //uv transformed
    into triangular grid space with UV scaled by approximation of 2*sqrt(3)$    float2
    skewUV = mul(float2x2 (1.0 , 0.0 , -0.57735027 , 1.15470054), UV * 3.464)@$$   
    //vertex IDs and barycentric coords$    float2 vxID = float2 (floor(skewUV))@$   
    float3 barry = float3 (frac(skewUV), 0)@$    barry.z = 1.0-barry.x-barry.y@$$   
    BW_vx = ((barry.z>0) ? $        float4x3(float3(vxID, 0), float3(vxID + float2(0,
    1), 0), float3(vxID + float2(1, 0), 0), barry.zyx) :$        float4x3(float3(vxID
    + float2 (1, 1), 0), float3(vxID + float2 (1, 0), 0), float3(vxID + float2 (0,
    1), 0), float3(-barry.z, 1.0-barry.y, 1.0-barry.x)))@$$    //calculate derivatives
    to avoid triangular grid artifacts$    float2 dx = ddx(UV)@$    float2 dy = ddy(UV)@$$   
    //blend samples with calculated weights$    return mul(tex2D(tex, UV + hash2D2D(BW_vx[0].xy),
    dx, dy), BW_vx[3].x) + $            mul(tex2D(tex, UV + hash2D2D(BW_vx[1].xy),
    dx, dy), BW_vx[3].y) + $            mul(tex2D(tex, UV + hash2D2D(BW_vx[2].xy),
    dx, dy), BW_vx[3].z)@;4;Create;2;True;tex;SAMPLER2D;0,0;In;;Float;False;True;UV;FLOAT2;0,0;In;;Float;False;tex2DStochastic;False;False;1;7;;False;2;0;SAMPLER2D;0,0;False;1;FLOAT2;0,0;False;1;FLOAT4;0\nNode;AmplifyShaderEditor.RangedFloatNode;18;-816,-112;Inherit;False;Constant;_Float4;Float
    4;7;0;Create;True;0;0;0;False;0;False;0.25;0;0;0;0;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionOutput;97;-608,720;Inherit;False;False;-1;Secondary
    Speed;4;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionOutput;83;-608,-656;Inherit;False;False;-1;Vector
    Out;1;False;1;0;FLOAT2;0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.FunctionOutput;87;-608,-560;Inherit;False;False;-1;Normal
    Speed;2;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionOutput;0;464,-64;Inherit;False;True;-1;Final;0;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.FunctionOutput;98;-608,864;Inherit;False;False;-1;Vector
    Secondary Out;3;False;1;0;FLOAT2;0,0;False;1;FLOAT2;0\nWireConnection;79;0;48;0\nWireConnection;79;1;20;0\nWireConnection;79;2;67;0\nWireConnection;21;0;109;0\nWireConnection;21;2;54;0\nWireConnection;21;1;16;0\nWireConnection;19;0;17;0\nWireConnection;19;1;18;0\nWireConnection;105;0;106;1\nWireConnection;105;1;106;3\nWireConnection;107;0;47;0\nWireConnection;108;0;107;0\nWireConnection;108;1;68;0\nWireConnection;108;2;105;0\nWireConnection;109;0;108;0\nWireConnection;109;1;107;1\nWireConnection;102;0;48;0\nWireConnection;103;0;102;0\nWireConnection;103;1;68;0\nWireConnection;103;2;105;0\nWireConnection;104;0;103;0\nWireConnection;104;1;102;1\nWireConnection;16;0;52;0\nWireConnection;7;0;51;0\nWireConnection;17;0;104;0\nWireConnection;17;2;50;0\nWireConnection;17;1;7;0\nWireConnection;12;0;11;0\nWireConnection;12;2;50;0\nWireConnection;12;1;9;0\nWireConnection;71;0;70;0\nWireConnection;96;0;48;0\nWireConnection;96;1;19;0\nWireConnection;96;2;67;0\nWireConnection;66;0;65;0\nWireConnection;20;0;12;0\nWireConnection;64;0;96;0\nWireConnection;64;1;79;0\nWireConnection;9;0;4;0\nWireConnection;9;1;3;0\nWireConnection;76;0;47;0\nWireConnection;76;1;21;0\nWireConnection;76;2;82;0\nWireConnection;4;0;51;0\nWireConnection;99;0;51;0\nWireConnection;99;1;3;0\nWireConnection;65;0;64;0\nWireConnection;65;1;76;0\nWireConnection;11;0;104;0\nWireConnection;97;0;52;0\nWireConnection;83;0;50;0\nWireConnection;87;0;99;0\nWireConnection;0;0;66;0\nWireConnection;98;0;54;0\nASEEND*/\n//CHKSM=DDD0598ED7848BC57E6FC8C9CED3DAE5594D183A"
  m_functionName: 
  m_description: Normal scroll
  m_additionalIncludes:
    m_additionalIncludes: []
    m_outsideIncludes: []
  m_additionalPragmas:
    m_additionalPragmas: []
    m_outsidePragmas: []
  m_additionalDirectives:
    m_validData: 0
    m_isDirty: 1
    m_moduleName: ' Additional Directives'
    m_independentModule: 1
    m_customEdited: 0
    m_additionalDirectives: []
    m_shaderFunctionDirectives: []
    m_nativeDirectives: []
    m_nativeDirectivesIndex: -1
    m_nativeDirectivesFoldout: 0
    m_directivesSaveItems: []
  m_nodeCategory: 0
  m_customNodeCategory: Moriohs Water Shader
  m_previewPosition: 0
  m_hidden: 0
  m_url: 
